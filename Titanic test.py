# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vFB06LWWe59n-LMZb4pcEa4-ynmVhnQ0
"""

import pickle
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.tree import DecisionTreeClassifier
import pandas as pd
df=pd.read_csv("train.csv")




def get_title(name):
  if '.' in name:
    return name.split(',')[1].split('.')[0].strip()
  else:
    return "No title in name"
title=set([x for x in df.Name.map(lambda x: get_title(x))])


def shorter_titles(x):
  titles=x["Title"]
  if titles in['Capt','Col','Major']:
    return 'Officers'
  elif titles in ['Jonkheer','Don','the Countess','Dona','Lady','Sir']:
    return 'Royalty'
  elif titles=="Mme":
    return 'Mrs'
  elif titles in ['Mlle','Ms']:
    return "Miss"
  else:
    return titles






df['Title']=df['Name'].map(lambda x:get_title(x))
df['Title']=df.apply(shorter_titles,axis=1)
df['Age'].fillna(df['Age'].median(),inplace=True)
df['Embarked'].fillna('S',inplace=True)
df['Fare'].fillna(df['Fare'].median(),inplace=True)
df.drop('Cabin',axis=1,inplace=True)
df.drop('Ticket',axis=1,inplace=True)

df.drop('Name',axis=1,inplace=True)
df.Sex.replace(('male','female'),(0,1),inplace=True)
df.Embarked.replace(('S','C','Q'),(0,1,2),inplace=True)
df.Title.replace(('Mr','Miss','Mrs','Master','Dr','Rev','Royalty','Officers'),(0,1,2,3,4,5,6,7),inplace=True)
from sklearn.model_selection import train_test_split
x=df.drop(['Survived','PassengerId'],axis=1)
y=df['Survived']


x_train,x_val,y_train,y_val=train_test_split(x,y,test_size=0.1)




randomforest=RandomForestClassifier()
randomforest.fit(x_train,y_train)
y_pred=randomforest.predict(x_val)
acc_randomforest=round(accuracy_score(y_pred,y_val)*100,2)
print(acc_randomforest)
pickle.dump(randomforest,open('testing.sav','wb'))